package net.unionstudio.framework.managers {	import flash.events.MouseEvent;	import flash.errors.IllegalOperationError;	import flash.events.Event;	import flash.events.EventDispatcher;	//	import lt.uza.utils.*;	//		//swfaddress	import asual.SWFAddress;	import asual.SWFAddressEvent;		import net.unionstudio.framework.events.StateManagerEvent;			public class StateManager extends EventDispatcher {				// create singleton instance		private static var _instance:StateManager = new StateManager();				//singletons//		protected var dataIO:DataIO = DataIO.getInstance();				protected var global:Global = Global.getInstance();				//vars//		protected static var _stateObject:Object;							//---------------------------------------------------------------//				public function StateManager() { 		//---------------------------------------------------------------//									if (_instance) {				throw new IllegalOperationError( "StateManager can only be accessed through StateManager.getInstance()" );			} else {				initNavigation();			}				}		//---------------------------------------------------------------//				public static function getInstance():StateManager { 		//---------------------------------------------------------------//						return _instance;				}		//---------------------------------------------------------------//				private function initNavigation():void { 		//---------------------------------------------------------------//							trace("StateManager/initNavigation()");					SWFAddress.addEventListener(SWFAddressEvent.INIT, handleSWFAddressInit);			SWFAddress.addEventListener(SWFAddressEvent.CHANGE, handleSWFAddress);						trace("Getting state: "+SWFAddress.getPath());				}						//---------------------------------------------------------------//				public function updateBrowserTitleBar($pageStr:String):void {		//---------------------------------------------------------------//								trace("updateBrowserTitleBar");						var tstr:String = $pageStr;						if (dataIO.getData("site").@name) tstr = dataIO.getData("site").@name+" | "+tstr;						SWFAddress.setTitle(tstr);					}				//---------------------------------------------------------------//				public function updateBrowserStatus($statusStr:String=null):void {		//---------------------------------------------------------------//								//trace("updateBrowserStatus: "+$statusStr);						if ($statusStr) {								SWFAddress.setStatus($statusStr);							} else{								SWFAddress.resetStatus();							}					}					//---------------------------------------------------------------//				public function updateStateByObject($obj:Object):void { 		//---------------------------------------------------------------//									trace("StateManager/updateStateByObject()");					_stateObject = $obj;					SWFAddress.setValue($obj.slug);								}						//---------------------------------------------------------------//				public function externalLink($url:String, $tgt:String="_blank"):void { 		//---------------------------------------------------------------//									SWFAddress.href($url, $tgt);					}				//---------------------------------------------------------------//				public function popUp():void { 		//---------------------------------------------------------------//									// use swfaddress popup method here								}									//---------------------------------------------------------------//				public function updateStateBySlug($str:String):void { 		//---------------------------------------------------------------//									trace("StateManager/updateStateBySlug()");						_stateObject = null;					SWFAddress.setValue($str);								}				//---------------------------------------------------------------//				private function handleSWFAddressInit($evt:SWFAddressEvent):void { 		//---------------------------------------------------------------//									SWFAddress.removeEventListener(SWFAddressEvent.INIT, handleSWFAddressInit);			var slug:String;						if ($evt.value!="/") {								slug = String($evt.value).substr(1);							} else if (global.firstPageSlug) {								slug = global.firstPageSlug;						}						updateStateBySlug(slug);					}				//---------------------------------------------------------------//				private function handleSWFAddress($evt:SWFAddressEvent):void { 		//---------------------------------------------------------------//						trace("StateManager/handleSwfAddress()");						if (_stateObject) {							trace("object present");				var tstr:String = _stateObject.name;								if (dataIO.getData("site").@name) tstr = dataIO.getData("site").@name+" | "+tstr;							SWFAddress.setTitle(tstr);								dispatchEvent(new StateManagerEvent(StateManagerEvent.UPDATE_OBJECT, _stateObject));						} else {								trace("no object present");				var address:String = SWFAddress.getValue();				address = address.substr(1);				if (address == "") address = "/";								dispatchEvent(new StateManagerEvent(StateManagerEvent.UPDATE_SLUG, null, address));					}						// must clear state after handling business for back/forward and deep links to work when within the site			_stateObject = null;					}			}	}