package net.unionstudio.whodo {    import flash.display.Sprite;	import flash.display.MovieClip;	import flash.display.Loader;	import flash.net.URLRequest;	import flash.events.Event;	import flash.events.ProgressEvent;    import flash.geom.Point;	import flash.text.TextField;	import flash.text.Font;	import flash.text.TextFormat;	import flash.text.TextFieldAutoSize;	import flash.text.TextFieldType;	import flash.text.AntiAliasType;	import flash.geom.Matrix;	import flash.display.GradientType;	import flash.display.SpreadMethod;	import flash.filters.DropShadowFilter;		import lt.uza.utils.*;		import net.unionstudio.framework.managers.*;	import net.unionstudio.utils.GetFlashVars;	import com.adobe.serialization.json.JSON; 	public class PopUp extends Sprite {				//singletons//		private var dataIO:DataIO = DataIO.getInstance();		private var global:Global = Global.getInstance();		private var infoArray:Array = new Array();		private var holder:Sprite;		private var _name:String;		private var txtArray:Array = new Array();						public function PopUp(str:String, infoObj:Object) {						trace("****************** POP UP *******************");						if (str) {_name = str; infoArray.push(_name)}											if (infoObj) {				 				for each(var userData:Object in infoObj) {										infoArray.push(userData.userName);  									     }					              createText();			}		}				//-------------------------------------------------------------//		private function createText():void {		//------------------------------------------------------------//		       var offset:Number = 10;			   var txt:TextField;			   holder = new Sprite();					       for (var i:int=0; i<infoArray.length; i++) {				   if (infoArray[i].length > 0) {					  if (i == 0) { 				         txt = makeTextField(String(infoArray[i]), "bold", 14);						 txt.y = i * txt.height + offset-5;					  } else {						 txt = makeTextField(String(infoArray[i]), "regular", 12);						// txt.y = i * txt.height + offset+10;						 txt.y = holder.height + offset;											  }				      txt.x = 7;				      holder.addChild(txt);					  txtArray.push(txt);				   }			   }						   holder.graphics.lineStyle(1, 0xFFFBE0, 0.2, true);			   holder.graphics.beginFill(global.bgPopupColor);			   holder.graphics.moveTo (5, 0);			   holder.graphics.lineTo (holder.width+10, 0);			   holder.graphics.curveTo(holder.width+10, 0, holder.width+10, 5);			   			  			   holder.graphics.lineTo(holder.width+5, holder.height);		       holder.graphics.curveTo(holder.width+5,holder.height+5,holder.width,holder.height+5);						   holder.graphics.lineTo(5,holder.height);			   holder.graphics.curveTo(0,holder.height,0,holder.height-5);						   holder.graphics.lineTo(0,5);			   holder.graphics.curveTo(0,0,5,0);			  			   holder.graphics.endFill();						   		       addChild(holder);					}						//-----------------------------------------------------------//		private function makeTextField(str:String, fontWeigth:String, size:Number):TextField {		//----------------------------------------------------------//				     var _textField:TextField = new TextField();			 _textField.multiline = true;			 _textField.selectable = false;			 _textField.type = TextFieldType.DYNAMIC;			 _textField.autoSize = TextFieldAutoSize.LEFT; 						 _textField.antiAliasType = AntiAliasType.ADVANCED;			 _textField.embedFonts = true;			 			 _textField.width = 130;			 _textField.wordWrap = true;									 var _textFormat:TextFormat = new TextFormat();			 _textFormat.color = 0x464646;			 _textFormat.size = size;			 _textFormat.leading = 1.5;			  			 if (fontWeigth == "bold") {			 			     var fontBold:Font = new HelveticaBold();			     _textFormat.font = fontBold.fontName;				 			 } else {				  var font:Font = new Helvetica();			     _textFormat.font = font.fontName;			 }			 			 			 _textField.setTextFormat(_textFormat);			 _textField.defaultTextFormat = _textFormat;									 _textField.htmlText = str;			 return _textField;			  		}						//--------------------------------------------------------//		public function destroy():void {		//-------------------------------------------------------//		    		    		}	}}